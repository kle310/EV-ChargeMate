name: Remote Git Pull and Run Playwright Tests

on:
  push:
    branches:
      - main # Trigger for main branch
      - staging # Trigger for staging branch

jobs:
  run-playwright-tests-on-staging:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          npm install

      # - name: Set up .env variables for staging
      #   run: |
      #     echo "PG_HOST=${{ secrets.PG_HOST }}" >> $GITHUB_ENV
      #     echo "PG_USER=${{ secrets.PG_USER }}" >> $GITHUB_ENV
      #     echo "PG_PASSWORD=${{ secrets.PG_PASSWORD }}" >> $GITHUB_ENV
      #     echo "PG_DATABASE=${{ secrets.PG_DATABASE }}" >> $GITHUB_ENV
      #     echo "PG_PORT=${{ secrets.PG_PORT }}" >> $GITHUB_ENV

      - name: Deploy app to staging server
        env:
          PG_HOST: $PG_HOST
          PG_USER: $PG_USER
          PG_PASSWORD: $PG_PASSWORD
          PG_DATABASE: $PG_DATABASE
          PG_PORT: $PG_PORT
        run: |
          npm run start &

      - name: Wait for the server to start
        run: |
          npx wait-on http://localhost:3000

      - name: Install Playwright browers
        run: |
          npx playwright install --with-deps

      - name: Run Playwright tests
        run: |
          npm run test

      - name: Upload Playwright artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-artifacts
          path: playwright-report

  deploy-to-production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts

      - name: SSH into server and perform git pull
        env:
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
        run: |
          ssh $REMOTE_USER@$REMOTE_HOST << EOF
            cd code/evc-tracker
            git pull origin main
          EOF
